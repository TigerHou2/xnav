%General Mission Analysis Tool(GMAT) Script
%Created: 2020-05-26 12:11:37


%----------------------------------------
%---------- Spacecraft
%----------------------------------------

Create Spacecraft sc;
GMAT sc.DateFormat = TAIModJulian;
GMAT sc.Epoch = '21545';
GMAT sc.CoordinateSystem = SunMJ2000Eq;
GMAT sc.DisplayStateType = Keplerian;
GMAT sc.SMA = 2323300000.000104;
GMAT sc.ECC = 0.9356000000000033;
GMAT sc.INC = 28;
GMAT sc.RAAN = 360;
GMAT sc.AOP = 180;
GMAT sc.TA = 359.9999987925818;
GMAT sc.DryMass = 850;
GMAT sc.Cd = 2.2;
GMAT sc.Cr = 1.8;
GMAT sc.DragArea = 15;
GMAT sc.SRPArea = 1;
GMAT sc.NAIFId = -10029001;
GMAT sc.NAIFIdReferenceFrame = -9029001;
GMAT sc.OrbitColor = Red;
GMAT sc.TargetColor = Teal;
GMAT sc.OrbitErrorCovariance = [ 1e+070 0 0 0 0 0 ; 0 1e+070 0 0 0 0 ; 0 0 1e+070 0 0 0 ; 0 0 0 1e+070 0 0 ; 0 0 0 0 1e+070 0 ; 0 0 0 0 0 1e+070 ];
GMAT sc.CdSigma = 1e+070;
GMAT sc.CrSigma = 1e+070;
GMAT sc.Id = 'SatId';
GMAT sc.Attitude = CoordinateSystemFixed;
GMAT sc.SPADSRPScaleFactor = 1;
GMAT sc.ModelFile = 'aura.3ds';
GMAT sc.ModelOffsetX = 0;
GMAT sc.ModelOffsetY = 0;
GMAT sc.ModelOffsetZ = 0;
GMAT sc.ModelRotationX = 0;
GMAT sc.ModelRotationY = 0;
GMAT sc.ModelRotationZ = 0;
GMAT sc.ModelScale = 1;
GMAT sc.AttitudeDisplayStateType = 'Quaternion';
GMAT sc.AttitudeRateDisplayStateType = 'AngularVelocity';
GMAT sc.AttitudeCoordinateSystem = EarthMJ2000Eq;
GMAT sc.EulerAngleSequence = '321';






%----------------------------------------
%---------- ForceModels
%----------------------------------------

Create ForceModel prop_sc_ForceModel;
GMAT prop_sc_ForceModel.CentralBody = Sun;
GMAT prop_sc_ForceModel.PointMasses = {Earth, Jupiter, Neptune, Sun};
GMAT prop_sc_ForceModel.Drag = None;
GMAT prop_sc_ForceModel.SRP = On;
GMAT prop_sc_ForceModel.RelativisticCorrection = Off;
GMAT prop_sc_ForceModel.ErrorControl = RSSStep;
GMAT prop_sc_ForceModel.SRP.Flux = 1367;
GMAT prop_sc_ForceModel.SRP.SRPModel = Spherical;
GMAT prop_sc_ForceModel.SRP.Nominal_Sun = 149597870.691;

%----------------------------------------
%---------- Propagators
%----------------------------------------

Create Propagator prop_sc;
GMAT prop_sc.FM = prop_sc_ForceModel;
GMAT prop_sc.Type = PrinceDormand78;
GMAT prop_sc.InitialStepSize = 600;
GMAT prop_sc.Accuracy = 9.999999999999999e-012;
GMAT prop_sc.MinStep = 0;
GMAT prop_sc.MaxStep = 864000;
GMAT prop_sc.MaxStepAttempts = 50;
GMAT prop_sc.StopIfAccuracyIsViolated = true;

%----------------------------------------
%---------- Coordinate Systems
%----------------------------------------

Create CoordinateSystem SunMJ2000Eq;
GMAT SunMJ2000Eq.Origin = Sun;
GMAT SunMJ2000Eq.Axes = MJ2000Eq;

%----------------------------------------
%---------- Subscribers
%----------------------------------------

Create OrbitView SolarView;
GMAT SolarView.SolverIterations = Current;
GMAT SolarView.UpperLeft = [ 0.04198152812762385 0.02624495289367429 ];
GMAT SolarView.Size = [ 0.9504617968094039 0.8997308209959624 ];
GMAT SolarView.RelativeZOrder = 257;
GMAT SolarView.Maximized = false;
GMAT SolarView.Add = {sc, Earth, Sun, Neptune};
GMAT SolarView.CoordinateSystem = SunMJ2000Eq;
GMAT SolarView.DrawObject = [ true true true true ];
GMAT SolarView.DataCollectFrequency = 1;
GMAT SolarView.UpdatePlotFrequency = 50;
GMAT SolarView.NumPointsToRedraw = 0;
GMAT SolarView.ShowPlot = true;
GMAT SolarView.MaxPlotPoints = 20000;
GMAT SolarView.ShowLabels = true;
GMAT SolarView.ViewPointReference = Sun;
GMAT SolarView.ViewPointVector = [ 4000000000 0 4000000000 ];
GMAT SolarView.ViewDirection = Sun;
GMAT SolarView.ViewScaleFactor = 1;
GMAT SolarView.ViewUpCoordinateSystem = SunMJ2000Eq;
GMAT SolarView.ViewUpAxis = Z;
GMAT SolarView.EclipticPlane = Off;
GMAT SolarView.XYPlane = On;
GMAT SolarView.WireFrame = Off;
GMAT SolarView.Axes = On;
GMAT SolarView.Grid = Off;
GMAT SolarView.SunLine = Off;
GMAT SolarView.UseInitialView = On;
GMAT SolarView.StarCount = 7000;
GMAT SolarView.EnableStars = On;
GMAT SolarView.EnableConstellations = On;

Create ReportFile report_demo;
GMAT report_demo.SolverIterations = Current;
GMAT report_demo.UpperLeft = [ 0.1028547439126784 0.1648721399730821 ];
GMAT report_demo.Size = [ 0.5994962216624685 0.7994616419919246 ];
GMAT report_demo.RelativeZOrder = 253;
GMAT report_demo.Maximized = false;
GMAT report_demo.Filename = 'ReportFile1.txt';
GMAT report_demo.Precision = 16;
GMAT report_demo.WriteHeaders = true;
GMAT report_demo.LeftJustify = On;
GMAT report_demo.ZeroFill = Off;
GMAT report_demo.FixedWidth = true;
GMAT report_demo.Delimiter = ' ';
GMAT report_demo.ColumnWidth = 23;
GMAT report_demo.WriteReport = true;


%----------------------------------------
%---------- MATLAB Functions
%----------------------------------------

Create MatlabFunction viod;
GMAT viod.FunctionPath = 'C:\Users\tigre\Desktop\Directory\Research\xnav\viod_gmat\';

%----------------------------------------
%---------- MATLAB Functions
%----------------------------------------

Create MatlabFunction addnoise;
GMAT addnoise.FunctionPath = 'C:\Users\tigre\Desktop\Directory\Research\xnav\viod_gmat\';

%----------------------------------------
%---------- Arrays, Variables, Strings
%----------------------------------------

% preallocate 100 measurements
% because GMAT does not allow dynamic variable sizing or variable initialization using other variables
Create Array v[100,3] rEst[100,3] rRef[100,3] rDiff[100,3] f[1,3];
Create Variable mu num_obsv df f0 ff i temp noise;
Create String blank;
GMAT num_obsv = 5;
GMAT df = 10;
GMAT f0 = 0;
GMAT noise = 0;
GMAT blank = '';

%----------------------------------------
%---------- Mission Sequence
%----------------------------------------

BeginMissionSequence;

For i = 1:num_obsv;
   
   GMAT temp = i-1;
   GMAT ff = f0 + temp*df;
   
   Propagate prop_sc(sc) {sc.TA = ff};
   GMAT v(i,1) = sc.VX;
   GMAT v(i,2) = sc.VY;
   GMAT v(i,3) = sc.VZ;
   GMAT rRef(i,1) = sc.X;
   GMAT rRef(i,2) = sc.Y;
   GMAT rRef(i,3) = sc.Z;

EndFor;

For i = 1:num_obsv
	Report report_demo v(i,1) v(i,2) v(i,3);
EndFor;
Report report_demo blank;

GMAT [v] = addnoise(v,noise);

For i = 1:num_obsv
	Report report_demo v(i,1) v(i,2) v(i,3);
EndFor;
Report report_demo blank;

GMAT mu = SolarSystem.Sun.Mu;
GMAT [rEst] = viod(v, mu);
GMAT rDiff = rRef - rEst;

For i = 1:num_obsv
	Report report_demo rEst(i,1) rEst(i,2) rEst(i,3);
EndFor;
Report report_demo blank;

For i = 1:num_obsv
	Report report_demo rRef(i,1) rRef(i,2) rRef(i,3);
EndFor;
Report report_demo blank;

For i = 1:num_obsv
	Report report_demo rDiff(i,1) rDiff(i,2) rDiff(i,3);
EndFor;
Report report_demo blank;
