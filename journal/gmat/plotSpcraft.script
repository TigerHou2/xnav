%General Mission Analysis Tool(GMAT) Script
%Created: 2020-07-06 19:58:27


%----------------------------------------
%---------- Spacecraft
%----------------------------------------

Create Spacecraft sc;
GMAT sc.DateFormat = TAIModJulian;
GMAT sc.Epoch = '21545';
GMAT sc.CoordinateSystem = EarthMJ2000Eq;
GMAT sc.DisplayStateType = Keplerian;
GMAT sc.SMA = 7191.93881762905;
GMAT sc.ECC = 0.02454974900598156;
GMAT sc.INC = 12.850080056581;
GMAT sc.RAAN = 306.6148021947984;
GMAT sc.AOP = 314.1905515359986;
GMAT sc.TA = 99.88774933204243;
GMAT sc.DryMass = 850;
GMAT sc.Cd = 2.2;
GMAT sc.Cr = 1.8;
GMAT sc.DragArea = 15;
GMAT sc.SRPArea = 1;
GMAT sc.NAIFId = -10006001;
GMAT sc.NAIFIdReferenceFrame = -9006001;
GMAT sc.OrbitColor = Red;
GMAT sc.TargetColor = Teal;
GMAT sc.OrbitErrorCovariance = [ 1e+070 0 0 0 0 0 ; 0 1e+070 0 0 0 0 ; 0 0 1e+070 0 0 0 ; 0 0 0 1e+070 0 0 ; 0 0 0 0 1e+070 0 ; 0 0 0 0 0 1e+070 ];
GMAT sc.CdSigma = 1e+070;
GMAT sc.CrSigma = 1e+070;
GMAT sc.Id = 'SatId';
GMAT sc.Attitude = CoordinateSystemFixed;
GMAT sc.SPADSRPScaleFactor = 1;
GMAT sc.ModelFile = 'aura.3ds';
GMAT sc.ModelOffsetX = 0;
GMAT sc.ModelOffsetY = 0;
GMAT sc.ModelOffsetZ = 0;
GMAT sc.ModelRotationX = 0;
GMAT sc.ModelRotationY = 0;
GMAT sc.ModelRotationZ = 0;
GMAT sc.ModelScale = 1;
GMAT sc.AttitudeDisplayStateType = 'Quaternion';
GMAT sc.AttitudeRateDisplayStateType = 'AngularVelocity';
GMAT sc.AttitudeCoordinateSystem = EarthMJ2000Eq;
GMAT sc.EulerAngleSequence = '321';

Create Spacecraft sc_earth;
GMAT sc_earth.DateFormat = TAIModJulian;
GMAT sc_earth.Epoch = '21545';
GMAT sc_earth.CoordinateSystem = EarthMJ2000Eq;
GMAT sc_earth.DisplayStateType = Keplerian;
GMAT sc_earth.SMA = 7199.999999999975;
GMAT sc_earth.ECC = 1.49363406018766e-016;
GMAT sc_earth.INC = 23.99999999999999;
GMAT sc_earth.RAAN = 29.99999999999999;
GMAT sc_earth.AOP = 0;
GMAT sc_earth.TA = 29.99999999999998;
GMAT sc_earth.DryMass = 850;
GMAT sc_earth.Cd = 2.2;
GMAT sc_earth.Cr = 1.8;
GMAT sc_earth.DragArea = 15;
GMAT sc_earth.SRPArea = 1;
GMAT sc_earth.NAIFId = -10007001;
GMAT sc_earth.NAIFIdReferenceFrame = -9007001;
GMAT sc_earth.OrbitColor = Green;
GMAT sc_earth.TargetColor = LightGray;
GMAT sc_earth.OrbitErrorCovariance = [ 1e+070 0 0 0 0 0 ; 0 1e+070 0 0 0 0 ; 0 0 1e+070 0 0 0 ; 0 0 0 1e+070 0 0 ; 0 0 0 0 1e+070 0 ; 0 0 0 0 0 1e+070 ];
GMAT sc_earth.CdSigma = 1e+070;
GMAT sc_earth.CrSigma = 1e+070;
GMAT sc_earth.Id = 'SatId';
GMAT sc_earth.Attitude = CoordinateSystemFixed;
GMAT sc_earth.SPADSRPScaleFactor = 1;
GMAT sc_earth.ModelFile = 'aura.3ds';
GMAT sc_earth.ModelOffsetX = 0;
GMAT sc_earth.ModelOffsetY = 0;
GMAT sc_earth.ModelOffsetZ = 0;
GMAT sc_earth.ModelRotationX = 0;
GMAT sc_earth.ModelRotationY = 0;
GMAT sc_earth.ModelRotationZ = 0;
GMAT sc_earth.ModelScale = 1;
GMAT sc_earth.AttitudeDisplayStateType = 'Quaternion';
GMAT sc_earth.AttitudeRateDisplayStateType = 'AngularVelocity';
GMAT sc_earth.AttitudeCoordinateSystem = EarthMJ2000Eq;
GMAT sc_earth.EulerAngleSequence = '321';

Create Spacecraft sc_sun;
GMAT sc_sun.DateFormat = TAIModJulian;
GMAT sc_sun.Epoch = '21545';
GMAT sc_sun.CoordinateSystem = SunMJ2000Eq;
GMAT sc_sun.DisplayStateType = Keplerian;
GMAT sc_sun.SMA = 145864620.9857948;
GMAT sc_sun.ECC = 2.050394822027422e-016;
GMAT sc_sun.INC = 24.00000000000005;
GMAT sc_sun.RAAN = 29.99999999999998;
GMAT sc_sun.AOP = 0;
GMAT sc_sun.TA = 29.9999999999999;
GMAT sc_sun.DryMass = 850;
GMAT sc_sun.Cd = 2.2;
GMAT sc_sun.Cr = 1.8;
GMAT sc_sun.DragArea = 15;
GMAT sc_sun.SRPArea = 1;
GMAT sc_sun.NAIFId = -10008001;
GMAT sc_sun.NAIFIdReferenceFrame = -9008001;
GMAT sc_sun.OrbitColor = Yellow;
GMAT sc_sun.TargetColor = DarkGray;
GMAT sc_sun.OrbitErrorCovariance = [ 1e+070 0 0 0 0 0 ; 0 1e+070 0 0 0 0 ; 0 0 1e+070 0 0 0 ; 0 0 0 1e+070 0 0 ; 0 0 0 0 1e+070 0 ; 0 0 0 0 0 1e+070 ];
GMAT sc_sun.CdSigma = 1e+070;
GMAT sc_sun.CrSigma = 1e+070;
GMAT sc_sun.Id = 'SatId';
GMAT sc_sun.Attitude = CoordinateSystemFixed;
GMAT sc_sun.SPADSRPScaleFactor = 1;
GMAT sc_sun.ModelFile = 'aura.3ds';
GMAT sc_sun.ModelOffsetX = 0;
GMAT sc_sun.ModelOffsetY = 0;
GMAT sc_sun.ModelOffsetZ = 0;
GMAT sc_sun.ModelRotationX = 0;
GMAT sc_sun.ModelRotationY = 0;
GMAT sc_sun.ModelRotationZ = 0;
GMAT sc_sun.ModelScale = 1;
GMAT sc_sun.AttitudeDisplayStateType = 'Quaternion';
GMAT sc_sun.AttitudeRateDisplayStateType = 'AngularVelocity';
GMAT sc_sun.AttitudeCoordinateSystem = EarthMJ2000Eq;
GMAT sc_sun.EulerAngleSequence = '321';









%----------------------------------------
%---------- ForceModels
%----------------------------------------

Create ForceModel propagator_ForceModel;
GMAT propagator_ForceModel.CentralBody = Earth;
GMAT propagator_ForceModel.PrimaryBodies = {Earth};
GMAT propagator_ForceModel.Drag = None;
GMAT propagator_ForceModel.SRP = Off;
GMAT propagator_ForceModel.RelativisticCorrection = Off;
GMAT propagator_ForceModel.ErrorControl = RSSStep;
GMAT propagator_ForceModel.GravityField.Earth.Degree = 4;
GMAT propagator_ForceModel.GravityField.Earth.Order = 4;
GMAT propagator_ForceModel.GravityField.Earth.StmLimit = 100;
GMAT propagator_ForceModel.GravityField.Earth.PotentialFile = 'JGM2.cof';
GMAT propagator_ForceModel.GravityField.Earth.TideModel = 'None';

Create ForceModel prop_earth_ForceModel;
GMAT prop_earth_ForceModel.CentralBody = Earth;
GMAT prop_earth_ForceModel.PointMasses = {Earth};
GMAT prop_earth_ForceModel.Drag = None;
GMAT prop_earth_ForceModel.SRP = Off;
GMAT prop_earth_ForceModel.RelativisticCorrection = Off;
GMAT prop_earth_ForceModel.ErrorControl = RSSStep;

Create ForceModel prop_sun_ForceModel;
GMAT prop_sun_ForceModel.CentralBody = Sun;
GMAT prop_sun_ForceModel.PointMasses = {Sun};
GMAT prop_sun_ForceModel.Drag = None;
GMAT prop_sun_ForceModel.SRP = Off;
GMAT prop_sun_ForceModel.RelativisticCorrection = Off;
GMAT prop_sun_ForceModel.ErrorControl = RSSStep;

Create ForceModel prop_earth_perturbed_ForceModel;
GMAT prop_earth_perturbed_ForceModel.CentralBody = Earth;
GMAT prop_earth_perturbed_ForceModel.PrimaryBodies = {Earth};
GMAT prop_earth_perturbed_ForceModel.PointMasses = {Luna, Sun};
GMAT prop_earth_perturbed_ForceModel.Drag = None;
GMAT prop_earth_perturbed_ForceModel.SRP = On;
GMAT prop_earth_perturbed_ForceModel.RelativisticCorrection = Off;
GMAT prop_earth_perturbed_ForceModel.ErrorControl = RSSStep;
GMAT prop_earth_perturbed_ForceModel.GravityField.Earth.Degree = 4;
GMAT prop_earth_perturbed_ForceModel.GravityField.Earth.Order = 4;
GMAT prop_earth_perturbed_ForceModel.GravityField.Earth.StmLimit = 100;
GMAT prop_earth_perturbed_ForceModel.GravityField.Earth.PotentialFile = 'JGM2.cof';
GMAT prop_earth_perturbed_ForceModel.GravityField.Earth.TideModel = 'None';
GMAT prop_earth_perturbed_ForceModel.SRP.Flux = 1367;
GMAT prop_earth_perturbed_ForceModel.SRP.SRPModel = Spherical;
GMAT prop_earth_perturbed_ForceModel.SRP.Nominal_Sun = 149597870.691;

Create ForceModel prop_sun_perturbed_ForceModel;
GMAT prop_sun_perturbed_ForceModel.CentralBody = Sun;
GMAT prop_sun_perturbed_ForceModel.PointMasses = {Earth, Jupiter, Mars, Mercury, Neptune, Pluto, Saturn, Sun, Uranus, Venus};
GMAT prop_sun_perturbed_ForceModel.Drag = None;
GMAT prop_sun_perturbed_ForceModel.SRP = On;
GMAT prop_sun_perturbed_ForceModel.RelativisticCorrection = Off;
GMAT prop_sun_perturbed_ForceModel.ErrorControl = RSSStep;
GMAT prop_sun_perturbed_ForceModel.SRP.Flux = 1367;
GMAT prop_sun_perturbed_ForceModel.SRP.SRPModel = Spherical;
GMAT prop_sun_perturbed_ForceModel.SRP.Nominal_Sun = 149597870.691;

%----------------------------------------
%---------- Propagators
%----------------------------------------

Create Propagator propagator;
GMAT propagator.FM = propagator_ForceModel;
GMAT propagator.Type = RungeKutta89;
GMAT propagator.InitialStepSize = 60;
GMAT propagator.Accuracy = 9.999999999999999e-012;
GMAT propagator.MinStep = 0.001;
GMAT propagator.MaxStep = 2700;
GMAT propagator.MaxStepAttempts = 50;
GMAT propagator.StopIfAccuracyIsViolated = true;

Create Propagator prop_earth;
GMAT prop_earth.FM = prop_earth_ForceModel;
GMAT prop_earth.Type = RungeKutta89;
GMAT prop_earth.InitialStepSize = 60;
GMAT prop_earth.Accuracy = 9.999999999999999e-012;
GMAT prop_earth.MinStep = 0.001;
GMAT prop_earth.MaxStep = 2700;
GMAT prop_earth.MaxStepAttempts = 50;
GMAT prop_earth.StopIfAccuracyIsViolated = true;

Create Propagator prop_sun;
GMAT prop_sun.FM = prop_sun_ForceModel;
GMAT prop_sun.Type = PrinceDormand78;
GMAT prop_sun.InitialStepSize = 600;
GMAT prop_sun.Accuracy = 9.999999999999999e-012;
GMAT prop_sun.MinStep = 0;
GMAT prop_sun.MaxStep = 86400;
GMAT prop_sun.MaxStepAttempts = 50;
GMAT prop_sun.StopIfAccuracyIsViolated = true;

Create Propagator prop_earth_perturbed;
GMAT prop_earth_perturbed.FM = prop_earth_perturbed_ForceModel;
GMAT prop_earth_perturbed.Type = RungeKutta89;
GMAT prop_earth_perturbed.InitialStepSize = 60;
GMAT prop_earth_perturbed.Accuracy = 9.999999999999999e-012;
GMAT prop_earth_perturbed.MinStep = 0.001;
GMAT prop_earth_perturbed.MaxStep = 2700;
GMAT prop_earth_perturbed.MaxStepAttempts = 50;
GMAT prop_earth_perturbed.StopIfAccuracyIsViolated = true;

Create Propagator prop_sun_perturbed;
GMAT prop_sun_perturbed.FM = prop_sun_perturbed_ForceModel;
GMAT prop_sun_perturbed.Type = PrinceDormand78;
GMAT prop_sun_perturbed.InitialStepSize = 600;
GMAT prop_sun_perturbed.Accuracy = 9.999999999999999e-012;
GMAT prop_sun_perturbed.MinStep = 0;
GMAT prop_sun_perturbed.MaxStep = 86400;
GMAT prop_sun_perturbed.MaxStepAttempts = 50;
GMAT prop_sun_perturbed.StopIfAccuracyIsViolated = true;

%----------------------------------------
%---------- Coordinate Systems
%----------------------------------------

Create CoordinateSystem SunMJ2000Eq;
GMAT SunMJ2000Eq.Origin = Sun;
GMAT SunMJ2000Eq.Axes = MJ2000Eq;

%----------------------------------------
%---------- Subscribers
%----------------------------------------

Create OrbitView earthView;
GMAT earthView.SolverIterations = Current;
GMAT earthView.UpperLeft = [ 0 0 ];
GMAT earthView.Size = [ 0.3 0.5994729907773386 ];
GMAT earthView.RelativeZOrder = 619;
GMAT earthView.Maximized = false;
GMAT earthView.Add = {sc, Earth, Luna};
GMAT earthView.CoordinateSystem = EarthMJ2000Eq;
GMAT earthView.DrawObject = [ true true true ];
GMAT earthView.DataCollectFrequency = 1;
GMAT earthView.UpdatePlotFrequency = 50;
GMAT earthView.NumPointsToRedraw = 0;
GMAT earthView.ShowPlot = true;
GMAT earthView.MaxPlotPoints = 20000;
GMAT earthView.ShowLabels = true;
GMAT earthView.ViewPointReference = Earth;
GMAT earthView.ViewPointVector = [ 90000 0 90000 ];
GMAT earthView.ViewDirection = Earth;
GMAT earthView.ViewScaleFactor = 1;
GMAT earthView.ViewUpCoordinateSystem = EarthMJ2000Eq;
GMAT earthView.ViewUpAxis = Z;
GMAT earthView.EclipticPlane = Off;
GMAT earthView.XYPlane = On;
GMAT earthView.WireFrame = Off;
GMAT earthView.Axes = On;
GMAT earthView.Grid = Off;
GMAT earthView.SunLine = Off;
GMAT earthView.UseInitialView = On;
GMAT earthView.StarCount = 7000;
GMAT earthView.EnableStars = On;
GMAT earthView.EnableConstellations = On;

Create OrbitView sunViewMars;
GMAT sunViewMars.SolverIterations = Current;
GMAT sunViewMars.UpperLeft = [ 0.3288235294117647 0 ];
GMAT sunViewMars.Size = [ 0.3 0.5994729907773386 ];
GMAT sunViewMars.RelativeZOrder = 611;
GMAT sunViewMars.Maximized = false;
GMAT sunViewMars.Add = {sc, Sun, Earth, Jupiter, Mars, Mercury, Venus};
GMAT sunViewMars.CoordinateSystem = SunMJ2000Eq;
GMAT sunViewMars.DrawObject = [ true true true true true true true ];
GMAT sunViewMars.DataCollectFrequency = 10;
GMAT sunViewMars.UpdatePlotFrequency = 100;
GMAT sunViewMars.NumPointsToRedraw = 0;
GMAT sunViewMars.ShowPlot = true;
GMAT sunViewMars.MaxPlotPoints = 20000;
GMAT sunViewMars.ShowLabels = true;
GMAT sunViewMars.ViewPointReference = Sun;
GMAT sunViewMars.ViewPointVector = [ 450000000 0 450000000 ];
GMAT sunViewMars.ViewDirection = Sun;
GMAT sunViewMars.ViewScaleFactor = 1;
GMAT sunViewMars.ViewUpCoordinateSystem = SunMJ2000Eq;
GMAT sunViewMars.ViewUpAxis = Z;
GMAT sunViewMars.EclipticPlane = Off;
GMAT sunViewMars.XYPlane = On;
GMAT sunViewMars.WireFrame = Off;
GMAT sunViewMars.Axes = On;
GMAT sunViewMars.Grid = Off;
GMAT sunViewMars.SunLine = Off;
GMAT sunViewMars.UseInitialView = On;
GMAT sunViewMars.StarCount = 7000;
GMAT sunViewMars.EnableStars = On;
GMAT sunViewMars.EnableConstellations = On;

Create OrbitView sunViewNeptune;
GMAT sunViewNeptune.SolverIterations = Current;
GMAT sunViewNeptune.UpperLeft = [ 0.6588235294117647 0 ];
GMAT sunViewNeptune.Size = [ 0.3 0.5994729907773386 ];
GMAT sunViewNeptune.RelativeZOrder = 607;
GMAT sunViewNeptune.Maximized = false;
GMAT sunViewNeptune.Add = {sc, Sun, Jupiter, Mars, Saturn, Pluto, Neptune, Uranus};
GMAT sunViewNeptune.CoordinateSystem = SunMJ2000Eq;
GMAT sunViewNeptune.DrawObject = [ true true true true true true true true ];
GMAT sunViewNeptune.DataCollectFrequency = 10;
GMAT sunViewNeptune.UpdatePlotFrequency = 100;
GMAT sunViewNeptune.NumPointsToRedraw = 0;
GMAT sunViewNeptune.ShowPlot = true;
GMAT sunViewNeptune.MaxPlotPoints = 20000;
GMAT sunViewNeptune.ShowLabels = true;
GMAT sunViewNeptune.ViewPointReference = Sun;
GMAT sunViewNeptune.ViewPointVector = [ 6000000000 0 6000000000 ];
GMAT sunViewNeptune.ViewDirection = Sun;
GMAT sunViewNeptune.ViewScaleFactor = 1;
GMAT sunViewNeptune.ViewUpCoordinateSystem = SunMJ2000Eq;
GMAT sunViewNeptune.ViewUpAxis = Z;
GMAT sunViewNeptune.EclipticPlane = Off;
GMAT sunViewNeptune.XYPlane = On;
GMAT sunViewNeptune.WireFrame = Off;
GMAT sunViewNeptune.Axes = On;
GMAT sunViewNeptune.Grid = Off;
GMAT sunViewNeptune.SunLine = Off;
GMAT sunViewNeptune.UseInitialView = On;
GMAT sunViewNeptune.StarCount = 7000;
GMAT sunViewNeptune.EnableStars = On;
GMAT sunViewNeptune.EnableConstellations = On;

Create ReportFile report;
GMAT report.SolverIterations = Current;
GMAT report.UpperLeft = [ 0 0 ];
GMAT report.Size = [ 0 0 ];
GMAT report.RelativeZOrder = 0;
GMAT report.Maximized = false;
GMAT report.Filename = 'ReportFile1.txt';
GMAT report.Precision = 16;
GMAT report.WriteHeaders = true;
GMAT report.LeftJustify = On;
GMAT report.ZeroFill = Off;
GMAT report.FixedWidth = true;
GMAT report.Delimiter = ' ';
GMAT report.ColumnWidth = 23;
GMAT report.WriteReport = true;

%----------------------------------------
%---------- Functions
%----------------------------------------

Create MatlabFunction init_gmat;
% GMAT init_gmat.FunctionPath = 'E:\Research\XNAV\journal\gmat';
GMAT init_gmat.FunctionPath = 'C:\Users\tigre\Desktop\Directory\Research\xnav\journal\gmat';

Create MatlabFunction load_spcraft_cases;
% GMAT load_spcraft_cases.FunctionPath = 'E:\Research\XNAV\journal\cases';
GMAT load_spcraft_cases.FunctionPath = 'C:\Users\tigre\Desktop\Directory\Research\xnav\journal\cases';

Create MatlabFunction save2mat;
% GMAT save2mat.FunctionPath = 'E:\Research\XNAV\journal\gmat';
GMAT save2mat.FunctionPath = 'C:\Users\tigre\Desktop\Directory\Research\xnav\journal\gmat';

Create MatlabFunction g2mat;
% GMAT g2mat.FunctionPath = 'E:\Research\XNAV\journal\gmat';
GMAT g2mat.FunctionPath = 'C:\Users\tigre\Desktop\Directory\Research\xnav\journal\gmat';

Create MatlabFunction plotSpcraft;
% GMAT plotSpcraft.FunctionPath = 'E:\Research\XNAV\journal\gmat';
GMAT plotSpcraft.FunctionPath = 'C:\Users\tigre\Desktop\Directory\Research\xnav\journal\gmat';

%----------------------------------------
%---------- Arrays, Variables, Strings
%----------------------------------------

Create Array durVect[1,3] obsVect[1,3] noiseVect[1,5] rData[1,3] vData[100,3];
Create Variable durLen obsLen noiseLen noise duration temp SMA ECC TA numObsv;
Create Variable numSims rngSeed mu period dt dtBack i j k m;
Create Variable centralBody pi b1 b2 b3 b4 perturbed;
Create String filepath fp1 fp2;
GMAT duration = 0.1;
GMAT temp = 1;
GMAT numObsv = 3;
GMAT numSims = 100;
GMAT rngSeed = 1;
GMAT pi = 3.1415927;
GMAT perturbed = 1;
GMAT filepath = 'temp\datSpcraft.mat';
GMAT fp1 = 'temp\datSpcraft.mat';
GMAT fp2 = 'temp\datSpcraftPerturbed.mat';




%----------------------------------------
%---------- Mission Sequence
%----------------------------------------

BeginMissionSequence;

%---- initialize workspace
GMAT init_gmat;

%---- load spacecraft cases from MATLAB
GMAT [noiseVect, durVect, obsVect, SMA, ECC, TA, centralBody, noiseLen, durLen, obsLen] = ...
	load_spcraft_cases(temp);

%---- set spacecraft orbit from case file above
PenUp earthView;
PenUp sunViewMars;
PenUp sunViewNeptune;
If centralBody == 0 % Earth orbit
   GMAT sc = sc_earth;
   If perturbed == 0
      GMAT propagator = prop_earth;
   Else
      GMAT propagator = prop_earth_perturbed;
   EndIf;
   GMAT sc.Earth.SMA = SMA;
   GMAT sc.Earth.ECC = ECC;
   GMAT sc.Earth.TA = TA / pi * 180;
   GMAT mu = SolarSystem.Earth.Mu;
EndIf;
If centralBody == 1 % Solar orbit
   GMAT sc = sc_sun;
   If perturbed == 0
      GMAT propagator = prop_sun;
   Else
      GMAT propagator = prop_sun_perturbed;
   EndIf;
   GMAT sc.Sun.SMA = SMA;
   GMAT sc.Sun.ECC = ECC;
   GMAT sc.Sun.TA = TA / pi * 180;
   GMAT mu = SolarSystem.Sun.Mu;
EndIf;

%---- define save file path based on perturbed / non-perturbed
If perturbed == 0
   GMAT filepath = fp1;
Else
   GMAT filepath = fp2;
EndIf;

GMAT k = 1;

%---- iterate over each case and store velocity data
% iterate over measurement duration
For i = 1:1:durLen;
   GMAT duration = durVect(i);
   GMAT period = 2 * pi * sqrt(SMA^3/mu) * duration;
   % iterate over number of observations
   For j = 1:1:obsLen;
      GMAT numObsv = obsVect(j);
		Report report i j numObsv;
      GMAT dt = period / (numObsv-1);
		GMAT dtBack = -1 * period;
		Report report i j period dt;
      % draw trajectory
      PenDown earthView;
      PenDown sunViewMars;
      PenDown sunViewNeptune;
      % propagate and collect data
      For m = 1:1:numObsv;
			If centralBody == 0; % Earth orbit
				If m == 1
					GMAT rData(1,1) = sc.EarthMJ2000Eq.X;
					GMAT rData(1,2) = sc.EarthMJ2000Eq.Y;
					GMAT rData(1,3) = sc.EarthMJ2000Eq.Z;
				EndIf;
				GMAT vData(m,1) = sc.EarthMJ2000Eq.VX;
				GMAT vData(m,2) = sc.EarthMJ2000Eq.VY;
				GMAT vData(m,3) = sc.EarthMJ2000Eq.VZ;
			EndIf; %Earth
			If centralBody == 1; % Solar orbit
				If m == 1
					GMAT rData(1,1) = sc.SunMJ2000Eq.X;
					GMAT rData(1,2) = sc.SunMJ2000Eq.Y;
					GMAT rData(1,3) = sc.SunMJ2000Eq.Z;
				EndIf;
				GMAT vData(m,1) = sc.SunMJ2000Eq.VX;
				GMAT vData(m,2) = sc.SunMJ2000Eq.VY;
				GMAT vData(m,3) = sc.SunMJ2000Eq.VZ;
			EndIf; %Sun
			If m ~= numObsv;
				Propagate propagator(sc) {sc.ElapsedSecs = dt};
			EndIf;
      EndFor; %numObsv
      % back propagate to reset spacecraft after measurements are collected
      PenUp earthView;
      PenUp sunViewMars;
      PenUp sunViewNeptune;
      Propagate BackProp propagator(sc) {sc.ElapsedSecs = dtBack};
      % store collected data in .mat structure
      GMAT g2mat(rData, vData);
      GMAT save2mat(filepath, rData, vData, mu, i, j, k);
		% clear the velocity variable
		GMAT vData = vData * 0;
   EndFor; %observations
EndFor; %duration

%---- add noise to velocity data in a Monte Carlo sim and plot results
GMAT plotSpcraft(numSims, rngSeed, perturbed);
