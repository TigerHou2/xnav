%General Mission Analysis Tool(GMAT) Script
%Created: 2020-07-06 19:58:27


%----------------------------------------
%---------- Spacecraft
%----------------------------------------

Create Spacecraft sc;
GMAT sc.DateFormat = TAIModJulian;
GMAT sc.Epoch = '21545';
GMAT sc.CoordinateSystem = SunMJ2000Eq;
GMAT sc.DisplayStateType = Keplerian;
GMAT sc.SMA = 2299999999.999992;
GMAT sc.ECC = 0.5999999999999991;
GMAT sc.INC = 22.99999999999996;
GMAT sc.RAAN = 5.999999999999965;
GMAT sc.AOP = 8.000000000000071;
GMAT sc.TA = 10.00000000000023;
GMAT sc.DryMass = 850;
GMAT sc.Cd = 2.2;
GMAT sc.Cr = 1.8;
GMAT sc.DragArea = 15;
GMAT sc.SRPArea = 1;
GMAT sc.NAIFId = -10006001;
GMAT sc.NAIFIdReferenceFrame = -9006001;
GMAT sc.OrbitColor = Red;
GMAT sc.TargetColor = Teal;
GMAT sc.OrbitErrorCovariance = [ 1e+070 0 0 0 0 0 ; 0 1e+070 0 0 0 0 ; 0 0 1e+070 0 0 0 ; 0 0 0 1e+070 0 0 ; 0 0 0 0 1e+070 0 ; 0 0 0 0 0 1e+070 ];
GMAT sc.CdSigma = 1e+070;
GMAT sc.CrSigma = 1e+070;
GMAT sc.Id = 'SatId';
GMAT sc.Attitude = CoordinateSystemFixed;
GMAT sc.SPADSRPScaleFactor = 1;
GMAT sc.ModelFile = 'aura.3ds';
GMAT sc.ModelOffsetX = 0;
GMAT sc.ModelOffsetY = 0;
GMAT sc.ModelOffsetZ = 0;
GMAT sc.ModelRotationX = 0;
GMAT sc.ModelRotationY = 0;
GMAT sc.ModelRotationZ = 0;
GMAT sc.ModelScale = 1;
GMAT sc.AttitudeDisplayStateType = 'Quaternion';
GMAT sc.AttitudeRateDisplayStateType = 'AngularVelocity';
GMAT sc.AttitudeCoordinateSystem = EarthMJ2000Eq;
GMAT sc.EulerAngleSequence = '321';

Create Spacecraft sc_near;
GMAT sc_near.DateFormat = TAIModJulian;
GMAT sc_near.Epoch = '21545';
GMAT sc_near.CoordinateSystem = SunMJ2000Eq;
GMAT sc_near.DisplayStateType = Keplerian;
GMAT sc_near.SMA = 2299999999.999954;
GMAT sc_near.ECC = 0.7499999999999972;
GMAT sc_near.INC = 22.99999999999999;
GMAT sc_near.RAAN = 360;
GMAT sc_near.AOP = 29.99999999999995;
GMAT sc_near.TA = 10.00000000000005;
GMAT sc_near.DryMass = 850;
GMAT sc_near.Cd = 2.2;
GMAT sc_near.Cr = 1.8;
GMAT sc_near.DragArea = 15;
GMAT sc_near.SRPArea = 1;
GMAT sc_near.NAIFId = -10007001;
GMAT sc_near.NAIFIdReferenceFrame = -9007001;
GMAT sc_near.OrbitColor = Green;
GMAT sc_near.TargetColor = LightGray;
GMAT sc_near.OrbitErrorCovariance = [ 1e+070 0 0 0 0 0 ; 0 1e+070 0 0 0 0 ; 0 0 1e+070 0 0 0 ; 0 0 0 1e+070 0 0 ; 0 0 0 0 1e+070 0 ; 0 0 0 0 0 1e+070 ];
GMAT sc_near.CdSigma = 1e+070;
GMAT sc_near.CrSigma = 1e+070;
GMAT sc_near.Id = 'SatId';
GMAT sc_near.Attitude = CoordinateSystemFixed;
GMAT sc_near.SPADSRPScaleFactor = 1;
GMAT sc_near.ModelFile = 'aura.3ds';
GMAT sc_near.ModelOffsetX = 0;
GMAT sc_near.ModelOffsetY = 0;
GMAT sc_near.ModelOffsetZ = 0;
GMAT sc_near.ModelRotationX = 0;
GMAT sc_near.ModelRotationY = 0;
GMAT sc_near.ModelRotationZ = 0;
GMAT sc_near.ModelScale = 1;
GMAT sc_near.AttitudeDisplayStateType = 'Quaternion';
GMAT sc_near.AttitudeRateDisplayStateType = 'AngularVelocity';
GMAT sc_near.AttitudeCoordinateSystem = EarthMJ2000Eq;
GMAT sc_near.EulerAngleSequence = '321';

Create Spacecraft sc_far;
GMAT sc_far.DateFormat = TAIModJulian;
GMAT sc_far.Epoch = '21545';
GMAT sc_far.CoordinateSystem = SunMJ2000Eq;
GMAT sc_far.DisplayStateType = Keplerian;
GMAT sc_far.SMA = 2300000000.000004;
GMAT sc_far.ECC = 0.750000000000002;
GMAT sc_far.INC = 22.99999999999999;
GMAT sc_far.RAAN = 360;
GMAT sc_far.AOP = 210;
GMAT sc_far.TA = 9.99999999999983;
GMAT sc_far.DryMass = 850;
GMAT sc_far.Cd = 2.2;
GMAT sc_far.Cr = 1.8;
GMAT sc_far.DragArea = 15;
GMAT sc_far.SRPArea = 1;
GMAT sc_far.NAIFId = -10007001;
GMAT sc_far.NAIFIdReferenceFrame = -9007001;
GMAT sc_far.OrbitColor = Green;
GMAT sc_far.TargetColor = LightGray;
GMAT sc_far.OrbitErrorCovariance = [ 1e+070 0 0 0 0 0 ; 0 1e+070 0 0 0 0 ; 0 0 1e+070 0 0 0 ; 0 0 0 1e+070 0 0 ; 0 0 0 0 1e+070 0 ; 0 0 0 0 0 1e+070 ];
GMAT sc_far.CdSigma = 1e+070;
GMAT sc_far.CrSigma = 1e+070;
GMAT sc_far.Id = 'SatId';
GMAT sc_far.Attitude = CoordinateSystemFixed;
GMAT sc_far.SPADSRPScaleFactor = 1;
GMAT sc_far.ModelFile = 'aura.3ds';
GMAT sc_far.ModelOffsetX = 0;
GMAT sc_far.ModelOffsetY = 0;
GMAT sc_far.ModelOffsetZ = 0;
GMAT sc_far.ModelRotationX = 0;
GMAT sc_far.ModelRotationY = 0;
GMAT sc_far.ModelRotationZ = 0;
GMAT sc_far.ModelScale = 1;
GMAT sc_far.AttitudeDisplayStateType = 'Quaternion';
GMAT sc_far.AttitudeRateDisplayStateType = 'AngularVelocity';
GMAT sc_far.AttitudeCoordinateSystem = EarthMJ2000Eq;
GMAT sc_far.EulerAngleSequence = '321';

%----------------------------------------
%---------- ForceModels
%----------------------------------------

Create ForceModel prop_sun_ForceModel;
GMAT prop_sun_ForceModel.CentralBody = Sun;
GMAT prop_sun_ForceModel.PointMasses = {Sun};
GMAT prop_sun_ForceModel.Drag = None;
GMAT prop_sun_ForceModel.SRP = Off;
GMAT prop_sun_ForceModel.RelativisticCorrection = Off;
GMAT prop_sun_ForceModel.ErrorControl = RSSStep;

Create ForceModel prop_earth_perturbed_ForceModel;
GMAT prop_earth_perturbed_ForceModel.CentralBody = Earth;
GMAT prop_earth_perturbed_ForceModel.PrimaryBodies = {Earth};
GMAT prop_earth_perturbed_ForceModel.PointMasses = {Luna, Sun};
GMAT prop_earth_perturbed_ForceModel.Drag = None;
GMAT prop_earth_perturbed_ForceModel.SRP = On;
GMAT prop_earth_perturbed_ForceModel.RelativisticCorrection = Off;
GMAT prop_earth_perturbed_ForceModel.ErrorControl = RSSStep;
GMAT prop_earth_perturbed_ForceModel.GravityField.Earth.Degree = 4;
GMAT prop_earth_perturbed_ForceModel.GravityField.Earth.Order = 4;
GMAT prop_earth_perturbed_ForceModel.GravityField.Earth.StmLimit = 100;
GMAT prop_earth_perturbed_ForceModel.GravityField.Earth.PotentialFile = 'JGM2.cof';
GMAT prop_earth_perturbed_ForceModel.GravityField.Earth.TideModel = 'None';
GMAT prop_earth_perturbed_ForceModel.SRP.Flux = 1367;
GMAT prop_earth_perturbed_ForceModel.SRP.SRPModel = Spherical;
GMAT prop_earth_perturbed_ForceModel.SRP.Nominal_Sun = 149597870.691;

Create ForceModel prop_sun_perturbed_ForceModel;
GMAT prop_sun_perturbed_ForceModel.CentralBody = Sun;
GMAT prop_sun_perturbed_ForceModel.PointMasses = {Earth, Jupiter, Mars, Mercury, Neptune, Pluto, Saturn, Sun, Uranus, Venus};
GMAT prop_sun_perturbed_ForceModel.Drag = None;
GMAT prop_sun_perturbed_ForceModel.SRP = On;
GMAT prop_sun_perturbed_ForceModel.RelativisticCorrection = Off;
GMAT prop_sun_perturbed_ForceModel.ErrorControl = RSSStep;
GMAT prop_sun_perturbed_ForceModel.SRP.Flux = 1367;
GMAT prop_sun_perturbed_ForceModel.SRP.SRPModel = Spherical;
GMAT prop_sun_perturbed_ForceModel.SRP.Nominal_Sun = 149597870.691;

Create ForceModel prop_j2_ForceModel;
GMAT prop_j2_ForceModel.CentralBody = Earth;
GMAT prop_j2_ForceModel.PrimaryBodies = {Earth};
GMAT prop_j2_ForceModel.Drag = None;
GMAT prop_j2_ForceModel.SRP = Off;
GMAT prop_j2_ForceModel.RelativisticCorrection = Off;
GMAT prop_j2_ForceModel.ErrorControl = RSSStep;
GMAT prop_j2_ForceModel.GravityField.Earth.Degree = 4;
GMAT prop_j2_ForceModel.GravityField.Earth.Order = 4;
GMAT prop_j2_ForceModel.GravityField.Earth.StmLimit = 100;
GMAT prop_j2_ForceModel.GravityField.Earth.PotentialFile = 'JGM2.cof';
GMAT prop_j2_ForceModel.GravityField.Earth.TideModel = 'None';






























%----------------------------------------
%---------- ForceModels
%----------------------------------------

Create ForceModel propagator_ForceModel;
GMAT propagator_ForceModel.CentralBody = Sun;
GMAT propagator_ForceModel.PointMasses = {Sun};
GMAT propagator_ForceModel.Drag = None;
GMAT propagator_ForceModel.SRP = Off;
GMAT propagator_ForceModel.RelativisticCorrection = Off;
GMAT propagator_ForceModel.ErrorControl = RSSStep;

Create ForceModel prop_twobody_ForceModel;
GMAT prop_twobody_ForceModel.CentralBody = Sun;
GMAT prop_twobody_ForceModel.PointMasses = {Sun};
GMAT prop_twobody_ForceModel.Drag = None;
GMAT prop_twobody_ForceModel.SRP = Off;
GMAT prop_twobody_ForceModel.RelativisticCorrection = Off;
GMAT prop_twobody_ForceModel.ErrorControl = RSSStep;

Create ForceModel prop_jupiter_ForceModel;
GMAT prop_jupiter_ForceModel.CentralBody = Sun;
GMAT prop_jupiter_ForceModel.PointMasses = {Jupiter, Sun};
GMAT prop_jupiter_ForceModel.Drag = None;
GMAT prop_jupiter_ForceModel.SRP = Off;
GMAT prop_jupiter_ForceModel.RelativisticCorrection = Off;
GMAT prop_jupiter_ForceModel.ErrorControl = RSSStep;

Create ForceModel prop_srp_ForceModel;
GMAT prop_srp_ForceModel.CentralBody = Sun;
GMAT prop_srp_ForceModel.PointMasses = {Sun};
GMAT prop_srp_ForceModel.Drag = None;
GMAT prop_srp_ForceModel.SRP = On;
GMAT prop_srp_ForceModel.RelativisticCorrection = Off;
GMAT prop_srp_ForceModel.ErrorControl = RSSStep;
GMAT prop_srp_ForceModel.SRP.Flux = 1367;
GMAT prop_srp_ForceModel.SRP.SRPModel = Spherical;
GMAT prop_srp_ForceModel.SRP.Nominal_Sun = 149597870.691;

Create ForceModel prop_allpert_ForceModel;
GMAT prop_allpert_ForceModel.CentralBody = Sun;
GMAT prop_allpert_ForceModel.PointMasses = {Jupiter, Sun};
GMAT prop_allpert_ForceModel.Drag = None;
GMAT prop_allpert_ForceModel.SRP = On;
GMAT prop_allpert_ForceModel.RelativisticCorrection = Off;
GMAT prop_allpert_ForceModel.ErrorControl = RSSStep;
GMAT prop_allpert_ForceModel.SRP.Flux = 1367;
GMAT prop_allpert_ForceModel.SRP.SRPModel = Spherical;
GMAT prop_allpert_ForceModel.SRP.Nominal_Sun = 149597870.691;

Create ForceModel bp_ForceModel;
GMAT bp_ForceModel.CentralBody = Sun;
GMAT bp_ForceModel.PointMasses = {Sun};
GMAT bp_ForceModel.Drag = None;
GMAT bp_ForceModel.SRP = Off;
GMAT bp_ForceModel.RelativisticCorrection = Off;
GMAT bp_ForceModel.ErrorControl = RSSStep;

%----------------------------------------
%---------- Propagators
%----------------------------------------

Create Propagator propagator;
GMAT propagator.FM = propagator_ForceModel;
GMAT propagator.Type = PrinceDormand78;
GMAT propagator.InitialStepSize = 600;
GMAT propagator.Accuracy = 9.999999999999999e-012;
GMAT propagator.MinStep = 0;
GMAT propagator.MaxStep = 86400;
GMAT propagator.MaxStepAttempts = 50;
GMAT propagator.StopIfAccuracyIsViolated = true;

Create Propagator prop_twobody;
GMAT prop_twobody.FM = prop_twobody_ForceModel;
GMAT prop_twobody.Type = PrinceDormand78;
GMAT prop_twobody.InitialStepSize = 600;
GMAT prop_twobody.Accuracy = 9.999999999999999e-012;
GMAT prop_twobody.MinStep = 0;
GMAT prop_twobody.MaxStep = 86400;
GMAT prop_twobody.MaxStepAttempts = 50;
GMAT prop_twobody.StopIfAccuracyIsViolated = true;

Create Propagator prop_jupiter;
GMAT prop_jupiter.FM = prop_jupiter_ForceModel;
GMAT prop_jupiter.Type = PrinceDormand78;
GMAT prop_jupiter.InitialStepSize = 600;
GMAT prop_jupiter.Accuracy = 9.999999999999999e-012;
GMAT prop_jupiter.MinStep = 0;
GMAT prop_jupiter.MaxStep = 86400;
GMAT prop_jupiter.MaxStepAttempts = 50;
GMAT prop_jupiter.StopIfAccuracyIsViolated = true;

Create Propagator prop_srp;
GMAT prop_srp.FM = prop_srp_ForceModel;
GMAT prop_srp.Type = PrinceDormand78;
GMAT prop_srp.InitialStepSize = 600;
GMAT prop_srp.Accuracy = 9.999999999999999e-012;
GMAT prop_srp.MinStep = 0;
GMAT prop_srp.MaxStep = 86400;
GMAT prop_srp.MaxStepAttempts = 50;
GMAT prop_srp.StopIfAccuracyIsViolated = true;

Create Propagator prop_allpert;
GMAT prop_allpert.FM = prop_allpert_ForceModel;
GMAT prop_allpert.Type = PrinceDormand78;
GMAT prop_allpert.InitialStepSize = 600;
GMAT prop_allpert.Accuracy = 9.999999999999999e-012;
GMAT prop_allpert.MinStep = 0;
GMAT prop_allpert.MaxStep = 86400;
GMAT prop_allpert.MaxStepAttempts = 50;
GMAT prop_allpert.StopIfAccuracyIsViolated = true;

Create Propagator bp;
GMAT bp.FM = bp_ForceModel;
GMAT bp.Type = RungeKutta89;
GMAT bp.InitialStepSize = 600;
GMAT bp.Accuracy = 1e-007;
GMAT bp.MinStep = 0;
GMAT bp.MaxStep = 500000;
GMAT bp.MaxStepAttempts = 50;
GMAT bp.StopIfAccuracyIsViolated = true;

%----------------------------------------
%---------- Coordinate Systems
%----------------------------------------

Create CoordinateSystem SunMJ2000Eq;
GMAT SunMJ2000Eq.Origin = Sun;
GMAT SunMJ2000Eq.Axes = MJ2000Eq;

Create CoordinateSystem JupiterFixed;
GMAT JupiterFixed.Origin = Jupiter;
GMAT JupiterFixed.Axes = BodyFixed;

%----------------------------------------
%---------- Subscribers
%----------------------------------------

Create OrbitView sunView;
GMAT sunView.SolverIterations = Current;
GMAT sunView.UpperLeft = [ 0 0 ];
GMAT sunView.Size = [ 0.6001742160278746 0.7991071428571429 ];
GMAT sunView.RelativeZOrder = 87;
GMAT sunView.Maximized = false;
GMAT sunView.Add = {sc, Jupiter, Sun, Neptune, Earth};
GMAT sunView.CoordinateSystem = SunMJ2000Eq;
GMAT sunView.DrawObject = [ true true true true true ];
GMAT sunView.DataCollectFrequency = 1;
GMAT sunView.UpdatePlotFrequency = 50;
GMAT sunView.NumPointsToRedraw = 0;
GMAT sunView.ShowPlot = true;
GMAT sunView.MaxPlotPoints = 20000;
GMAT sunView.ShowLabels = true;
GMAT sunView.ViewPointReference = Sun;
GMAT sunView.ViewPointVector = [ 6000000000 0 6000000000 ];
GMAT sunView.ViewDirection = Sun;
GMAT sunView.ViewScaleFactor = 1;
GMAT sunView.ViewUpCoordinateSystem = SunMJ2000Eq;
GMAT sunView.ViewUpAxis = Z;
GMAT sunView.EclipticPlane = Off;
GMAT sunView.XYPlane = On;
GMAT sunView.WireFrame = Off;
GMAT sunView.Axes = On;
GMAT sunView.Grid = Off;
GMAT sunView.SunLine = Off;
GMAT sunView.UseInitialView = On;
GMAT sunView.StarCount = 7000;
GMAT sunView.EnableStars = On;
GMAT sunView.EnableConstellations = On;

Create ReportFile reportfile;
GMAT reportfile.SolverIterations = Current;
GMAT reportfile.UpperLeft = [ 0 0 ];
GMAT reportfile.Size = [ 0.5984320557491289 0.7961309523809523 ];
GMAT reportfile.RelativeZOrder = 90;
GMAT reportfile.Maximized = false;
GMAT reportfile.Filename = 'ReportFile1.txt';
GMAT reportfile.Precision = 16;
GMAT reportfile.Add = {sc.Jupiter.Altitude};
GMAT reportfile.WriteHeaders = true;
GMAT reportfile.LeftJustify = On;
GMAT reportfile.ZeroFill = Off;
GMAT reportfile.FixedWidth = true;
GMAT reportfile.Delimiter = ' ';
GMAT reportfile.ColumnWidth = 23;
GMAT reportfile.WriteReport = true;

Create ReportFile reportDistance;
GMAT reportDistance.SolverIterations = Current;
GMAT reportDistance.UpperLeft = [ 0 0 ];
GMAT reportDistance.Size = [ 0 0 ];
GMAT reportDistance.RelativeZOrder = 0;
GMAT reportDistance.Maximized = false;
GMAT reportDistance.Filename = 'ReportFile1.txt';
GMAT reportDistance.Precision = 16;
GMAT reportDistance.WriteHeaders = true;
GMAT reportDistance.LeftJustify = On;
GMAT reportDistance.ZeroFill = Off;
GMAT reportDistance.FixedWidth = true;
GMAT reportDistance.Delimiter = ' ';
GMAT reportDistance.ColumnWidth = 23;
GMAT reportDistance.WriteReport = true;

%----------------------------------------
%---------- Functions
%----------------------------------------

Create MatlabFunction init_gmat;
GMAT init_gmat.FunctionPath = 'E:\Research\XNAV\journal\gmat';
% GMAT init_gmat.FunctionPath = 'C:\Users\tigre\Desktop\Directory\Research\xnav\journal\gmat';

Create MatlabFunction save2mat;
GMAT save2mat.FunctionPath = 'E:\Research\XNAV\journal\gmat';
% GMAT save2mat.FunctionPath = 'C:\Users\tigre\Desktop\Directory\Research\xnav\journal\gmat';

Create MatlabFunction g2mat;
GMAT g2mat.FunctionPath = 'E:\Research\XNAV\journal\gmat';

%----------------------------------------
%---------- Arrays, Variables, Strings
%----------------------------------------

Create Array rData[1,3] vData[3,3];
Create Variable numObsv duration SMA mu period dt dtBack waitTime waitPeriod pi;
Create Variable i k m temp;
Create String filepath;
GMAT numObsv = 3;
GMAT duration = 0.01; % fraction of orbital period
GMAT waitTime = 0; % fraction of orbital period before measurement begins
GMAT pi = 3.1415927;
GMAT temp = 1;
GMAT filepath = 'temp\datJupiter.mat';



%----------------------------------------
%---------- Mission Sequence
%----------------------------------------

BeginMissionSequence;

%---- initialize workspace
GMAT init_gmat;

%---- get constants
GMAT mu = SolarSystem.Sun.Mu;

%---- clear data file
GMAT save2mat(filepath);

%---- iterate through near and far cases
For k = 1:1:2;
   
   PenUp sunView;
   
   If k == 1 % near case
      GMAT sc = sc_near;
   EndIf;
   If k == 2 % far case
      GMAT sc = sc_far;
   EndIf;
   
   GMAT SMA = sc.Sun.SMA;
   GMAT period = 2 * pi * sqrt(SMA^3/mu) * duration;
   GMAT waitPeriod = 2 * pi * sqrt(SMA^3/mu) * waitTime;
   GMAT dt = period / (numObsv-1);
   GMAT dtBack = -1 * period - waitPeriod;
   
   PenDown sunView;
   
   For i = 1:1:4;
      If i == 1 % do two-body control group
         GMAT propagator = prop_twobody;
      EndIf;
      If i == 2 % do Jupiter perturbation
         GMAT propagator = prop_jupiter;
      EndIf;
      If i == 3 % do SRP
         GMAT propagator = prop_srp;
      EndIf;
      If i == 4 % do all perturbations
         GMAT propagator = prop_allpert;
      EndIf;
      
      % reset the spacecraft
      If k == 1 % near case
         GMAT sc = sc_near;
      EndIf;
      If k == 2 % intermediate case
         GMAT sc = sc_far;
      EndIf;
      
      Toggle reportfile On;
      
      For m = 1:1:numObsv;
         If m == 1
            Propagate propagator(sc) {sc.ElapsedSecs = waitPeriod};
            GMAT rData(1,1) = sc.SunMJ2000Eq.X;
            GMAT rData(1,2) = sc.SunMJ2000Eq.Y;
            GMAT rData(1,3) = sc.SunMJ2000Eq.Z;
         EndIf;
         GMAT vData(m,1) = sc.SunMJ2000Eq.VX;
         GMAT vData(m,2) = sc.SunMJ2000Eq.VY;
         GMAT vData(m,3) = sc.SunMJ2000Eq.VZ;
			Report reportDistance sc.Jupiter.Altitude;
         If m ~= numObsv
            Propagate propagator(sc) {sc.ElapsedSecs = dt};
         EndIf;
      EndFor; %numObsv
      
      PenUp sunView;
      Toggle reportfile Off;
      Propagate BackProp bp(sc) {sc.ElapsedSecs = dtBack};
      PenDown sunView;
      
      Report reportfile temp;
      
      GMAT g2mat(rData, vData);
      GMAT save2mat(filepath, rData, vData, mu, i, k, temp);
   
   EndFor; %i
EndFor; %k
