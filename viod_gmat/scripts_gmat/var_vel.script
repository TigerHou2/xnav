%General Mission Analysis Tool(GMAT) Script
%Created: 2020-05-25 16:21:27


%----------------------------------------
%---------- Spacecraft
%----------------------------------------

Create Spacecraft sc;
GMAT sc.DateFormat = TAIModJulian;
GMAT sc.Epoch = '21545';
GMAT sc.CoordinateSystem = EarthMJ2000Eq;
GMAT sc.DisplayStateType = Keplerian;
GMAT sc.SMA = 10000;
GMAT sc.ECC = 0.3;
GMAT sc.INC = 29.99999999999996;
GMAT sc.RAAN = 40.00000000000003;
GMAT sc.AOP = 70.00000000000027;
GMAT sc.TA = 0;
GMAT sc.DryMass = 850;
GMAT sc.Cd = 2.2;
GMAT sc.Cr = 1.8;
GMAT sc.DragArea = 15;
GMAT sc.SRPArea = 1;
GMAT sc.NAIFId = -10002001;
GMAT sc.NAIFIdReferenceFrame = -9002001;
GMAT sc.OrbitColor = Red;
GMAT sc.TargetColor = Teal;
GMAT sc.OrbitErrorCovariance = [ 1e+070 0 0 0 0 0 ; 0 1e+070 0 0 0 0 ; 0 0 1e+070 0 0 0 ; 0 0 0 1e+070 0 0 ; 0 0 0 0 1e+070 0 ; 0 0 0 0 0 1e+070 ];
GMAT sc.CdSigma = 1e+070;
GMAT sc.CrSigma = 1e+070;
GMAT sc.Id = 'SatId';
GMAT sc.Attitude = CoordinateSystemFixed;
GMAT sc.SPADSRPScaleFactor = 1;
GMAT sc.ModelFile = 'aura.3ds';
GMAT sc.ModelOffsetX = 0;
GMAT sc.ModelOffsetY = 0;
GMAT sc.ModelOffsetZ = 0;
GMAT sc.ModelRotationX = 0;
GMAT sc.ModelRotationY = 0;
GMAT sc.ModelRotationZ = 0;
GMAT sc.ModelScale = 1;
GMAT sc.AttitudeDisplayStateType = 'Quaternion';
GMAT sc.AttitudeRateDisplayStateType = 'AngularVelocity';
GMAT sc.AttitudeCoordinateSystem = EarthMJ2000Eq;
GMAT sc.EulerAngleSequence = '321';

%----------------------------------------
%---------- ForceModels
%----------------------------------------

Create ForceModel prop_earth_ForceModel;
GMAT prop_earth_ForceModel.CentralBody = Earth;
GMAT prop_earth_ForceModel.PointMasses = {Earth};
GMAT prop_earth_ForceModel.Drag = None;
GMAT prop_earth_ForceModel.SRP = Off;
GMAT prop_earth_ForceModel.RelativisticCorrection = Off;
GMAT prop_earth_ForceModel.ErrorControl = RSSStep;

%----------------------------------------
%---------- Propagators
%----------------------------------------

Create Propagator prop_earth;
GMAT prop_earth.FM = prop_earth_ForceModel;
GMAT prop_earth.Type = RungeKutta89;
GMAT prop_earth.InitialStepSize = 60;
GMAT prop_earth.Accuracy = 9.999999999999999e-012;
GMAT prop_earth.MinStep = 0.001;
GMAT prop_earth.MaxStep = 2700;
GMAT prop_earth.MaxStepAttempts = 50;
GMAT prop_earth.StopIfAccuracyIsViolated = true;

%----------------------------------------
%---------- Subscribers
%----------------------------------------

Create OrbitView orbitView;
GMAT orbitView.SolverIterations = Current;
GMAT orbitView.UpperLeft = [ 0 0 ];
GMAT orbitView.Size = [ 0.7 0.9 ];
GMAT orbitView.RelativeZOrder = 587;
GMAT orbitView.Maximized = false;
GMAT orbitView.Add = {sc, Earth, Luna, Sun};
GMAT orbitView.CoordinateSystem = EarthMJ2000Eq;
GMAT orbitView.DrawObject = [ true true true true ];
GMAT orbitView.DataCollectFrequency = 1;
GMAT orbitView.UpdatePlotFrequency = 50;
GMAT orbitView.NumPointsToRedraw = 0;
GMAT orbitView.ShowPlot = true;
GMAT orbitView.MaxPlotPoints = 20000;
GMAT orbitView.ShowLabels = true;
GMAT orbitView.ViewPointReference = Earth;
GMAT orbitView.ViewPointVector = [ 150000 -100000 150000 ];
GMAT orbitView.ViewDirection = Earth;
GMAT orbitView.ViewScaleFactor = 1;
GMAT orbitView.ViewUpCoordinateSystem = EarthMJ2000Eq;
GMAT orbitView.ViewUpAxis = Z;
GMAT orbitView.EclipticPlane = Off;
GMAT orbitView.XYPlane = On;
GMAT orbitView.WireFrame = Off;
GMAT orbitView.Axes = On;
GMAT orbitView.Grid = Off;
GMAT orbitView.SunLine = On;
GMAT orbitView.UseInitialView = On;
GMAT orbitView.StarCount = 7000;
GMAT orbitView.EnableStars = On;
GMAT orbitView.EnableConstellations = On;

Create ReportFile report;
GMAT report.SolverIterations = Current;
GMAT report.UpperLeft = [ 0 0 ];
GMAT report.Size = [ 0.6 0.8 ];
GMAT report.RelativeZOrder = 570;
GMAT report.Maximized = false;
GMAT report.Filename = 'report.txt';
GMAT report.Precision = 16;
GMAT report.WriteHeaders = true;
GMAT report.LeftJustify = On;
GMAT report.ZeroFill = Off;
GMAT report.FixedWidth = true;
GMAT report.Delimiter = ' ';
GMAT report.ColumnWidth = 23;
GMAT report.WriteReport = true;

%----------------------------------------
%---------- MATLAB Functions
%----------------------------------------

Create MatlabFunction init;
GMAT init.FunctionPath = 'C:\Users\tigre\Desktop\Directory\Research\xnav\viod_gmat\';

Create MatlabFunction var_vel;
GMAT var_vel.FunctionPath = 'C:\Users\tigre\Desktop\Directory\Research\xnav\viod_gmat\scripts_matlab\';

%----------------------------------------
%---------- Arrays, Variables, Strings
%----------------------------------------

Create Array v[100,3] v_noisy[100,3] r[100,3] r_ref[1,3] sma_vect[1,7];
Create Variable mu noise f0 f df dt temp num_monte runTime period ecc;
Create Variable i j k sma_count num_obsv;
GMAT noise = 1; % m/s
GMAT f0 = 0; % deg
GMAT df = 200; % deg
GMAT num_monte = 1000;
GMAT sma_count = 7;
GMAT num_obsv = 6;
GMAT sma_vect(1) = 10000; % km
GMAT sma_vect(2) = 12000;
GMAT sma_vect(3) = 15000;
GMAT sma_vect(4) = 20000;
GMAT sma_vect(5) = 30000;
GMAT sma_vect(6) = 45000;
GMAT sma_vect(7) = 70000;


%----------------------------------------
%---------- Mission Sequence
%----------------------------------------

BeginMissionSequence;

GMAT init;
GMAT mu = SolarSystem.Earth.Mu;
GMAT df = df / (num_obsv-1);
GMAT f = f0;
Propagate prop_earth(sc) {sc.TA = f0};

For k = 1:1:sma_count;
   
   GMAT sc.SMA = sma_vect(k);
   
   For i = 1:1:num_obsv;
      
      GMAT v(i,1) = sc.EarthMJ2000Eq.VX;
      GMAT v(i,2) = sc.EarthMJ2000Eq.VY;
      GMAT v(i,3) = sc.EarthMJ2000Eq.VZ;
      GMAT r(i,1) = sc.EarthMJ2000Eq.X;
      GMAT r(i,2) = sc.EarthMJ2000Eq.Y;
      GMAT r(i,3) = sc.EarthMJ2000Eq.Z;
      
		GMAT f = f + df;
      If i ~= num_obsv
         Propagate prop_earth(sc) {sc.TA = f};
      EndIf;
   
   EndFor;
   
   %---------- Get Reference Data ----------
   
   GMAT r_ref(1) = sc.EarthMJ2000Eq.X;
   GMAT r_ref(2) = sc.EarthMJ2000Eq.Y;
   GMAT r_ref(3) = sc.EarthMJ2000Eq.Z;
   
   GMAT period = sc.OrbitPeriod;
   GMAT ecc = sc.ECC;
   
   %---------- Store Observation Data ----------
   
   GMAT var_vel(v, mu, noise, num_monte, r_ref, period, ecc);
   
   If k ~= sma_count
      Propagate BackProp prop_earth(sc) {sc.TA = f0};
   EndIf;
	GMAT f = f0;

EndFor;

%---------- Begin Monte Carlo Sim ----------

GMAT var_vel;

%---------- Misc Testing Code Here ----------

